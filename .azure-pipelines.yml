# Evolved from starter example and setup to debug release builds
# Docs at https://aka.ms/yaml

trigger:
- master

variables:
- name: TILEDBSOMA_SHA
  value: "dev"
- name: TILEDBSOMA_BUILD
  value: "$(Build.Repository.Localpath)/tiledb_build"
- name: TILEDBSOMA_INSTALL
  value: "$(Pipeline.Workspace)/.tiledbsoma_dist/$(TILEDBSOMA_SHA)"

jobs:
  - job: build
    strategy:
      matrix:
        macos_x86:
          imageName: "macOS-11"
          CMAKE_OSX_ARCHITECTURES: "x86_64"
          MACOSX_DEPLOYMENT_TARGET: 10.14
        #macos_arm:
        #  imageName: "macOS-11"
        #  CMAKE_OSX_ARCHITECTURES: "arm64"
        #  MACOSX_DEPLOYMENT_TARGET: 11
        linux_x86:
          imageName: "ubuntu-latest"
          CMAKE_OSX_ARCHITECTURES: ""
          MACOSX_DEPLOYMENT_TARGET: ""
    pool:
      vmImage: $(imageName)

    steps:
      - script: echo "Hello, world on $(imageName) $(CMAKE_OSX_ARCHITECTURES) $(TILEDBSOMA_BUILD) $(TILEDBSOMA_INSTALL)"
        displayName: 'Echo variables'

      - bash: |
          brew install pkg-config
        displayName: "Add pkg-config" 
        condition: eq(variables['Agent.OS'], 'Darwin')

      - bash: cmake --version
        displayName: "Check cmake"

      - bash: |
          set -xe pipefail
          #
          cd libtiledbsoma
          #
          cwd=`pwd`
          #
          mkdir -p $TILEDBSOMA_BUILD
          cd $TILEDBSOMA_BUILD
          #
          cmake -B $TILEDBSOMA_BUILD -S $cwd \
          	-DTILEDBSOMA_BUILD_CLI=OFF \
                -DTILEDBSOMA_ENABLE_TESTING=OFF \
                -DDOWNLOAD_TILEDB_PREBUILT=OFF \
                -DFORCE_BUILD_TILEDB=ON \
                -DOVERRIDE_INSTALL_PREFIX=OFF \
                -DCMAKE_INSTALL_PREFIX=${cwd}/dist \
                -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES} 
          #
          cmake --build $TILEDBSOMA_BUILD --config Release -j4
          cmake --build $TILEDBSOMA_BUILD --target install-libtiledbsoma --config Release
        displayName: "Build"
