# Evolved from starter example and setup to debug release builds
# Also leans heavily on Azure scripts for tiledb and tiledb-py
# Docs at https://aka.ms/yaml
# TODO: Rewrite for GH Actions

trigger:
- non-existing-dev-branch-so-this-is-turned-off  
#- master

variables:
- name: TILEDBSOMA_SHA
  value: "dev"
- name: TILEDBSOMA_BUILD
  value: "$(Build.Repository.Localpath)/tiledb_build"
- name: TILEDBSOMA_SOURCE
  value: "$(Build.Repository.Localpath)/libtiledbsoma"
- name: TILEDBSOMA_INSTALL
  value: "$(Pipeline.Workspace)/.tiledbsoma_dist/$(TILEDBSOMA_SHA)"

jobs:
  - job: build
    strategy:
      matrix:
        macos_x86:
          imageName: "macOS-11"
          CMAKE_OSX_ARCHITECTURES: "x86_64"
          MACOSX_DEPLOYMENT_TARGET: 10.14
          ARTIFACT_OS: 'macos'
          ARTIFACT_ARCH: 'x86_64'
        macos_arm:
          imageName: "macOS-11"
          CMAKE_OSX_ARCHITECTURES: "arm64"
          MACOSX_DEPLOYMENT_TARGET: 11 
          ARTIFACT_OS: 'macos'
          ARTIFACT_ARCH: 'arm64'
        linux_x86:
          imageName: "ubuntu-latest"
          CMAKE_OSX_ARCHITECTURES: ""
          MACOSX_DEPLOYMENT_TARGET: ""
          ARTIFACT_OS: 'linux'
          ARTIFACT_ARCH: "x86_64"
    pool:
      vmImage: $(imageName)

    steps:
      - script: echo "Vars are $imageName $CMAKE_OSX_ARCHITECTURES $TILEDBSOMA_BUILD $TILEDBSOMA_INSTALL"
        displayName: 'Echo variables'

      - bash: |
          brew install pkg-config
        displayName: "Add pkg-config" 
        condition: eq(variables['Agent.OS'], 'Darwin')

      - bash: cmake --version
        displayName: "Check cmake"

      - bash: |
          set -xe pipefail
          #
          cd libtiledbsoma
          #
          mkdir -p $TILEDBSOMA_BUILD
          cd $TILEDBSOMA_BUILD
          #
          #
          cmake -B $TILEDBSOMA_BUILD \
                -S $TILEDBSOMA_SOURCE \
          	-DDOWNLOAD_TILEDB_PREBUILT=ON \
          	-DTILEDBSOMA_BUILD_CLI=OFF \
          	-DTILEDBSOMA_ENABLE_TESTING=OFF \
                -DOVERRIDE_INSTALL_PREFIX=OFF \
                -DCMAKE_INSTALL_PREFIX=$TILEDBSOMA_INSTALL \
                -DCMAKE_OSX_ARCHITECTURES=$CMAKE_OSX_ARCHITECTURES
          #
          cmake --build $TILEDBSOMA_BUILD --config Release -j4
          cmake --build $TILEDBSOMA_BUILD --target install-libtiledbsoma --config Release
          #
          # this should not be needed -- the tiledb core library gets 'co-installed'
          rm -vf $TILEDBSOMA_INSTALL/lib/libtiledb.{so,dylib}*
        displayName: "Build"

      - bash: ls -lR $TILEDBSOMA_INSTALL
        displayName: "Inspect build output"
        
      - task: ArchiveFiles@2
        displayName: "Archive Files"
        inputs:
          rootFolderOrFile: $(TILEDBSOMA_INSTALL)
          includeRootFolder: false
          archiveType: 'tar' # Options: zip, 7z, tar, wim
          tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
          archiveFile: $(Build.ArtifactStagingDirectory)/tiledbsoma-$(ARTIFACT_OS)-$(ARTIFACT_ARCH)-$(TILEDBSOMA_SHA).tar.gz
          replaceExistingArchive: true
          verbose: true # Optional
           
      - task: PublishBuildArtifacts@1
        displayName: "Publish Files"
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)/tiledbsoma-$(ARTIFACT_OS)-$(ARTIFACT_ARCH)-$(TILEDBSOMA_SHA).tar.gz'
          artifactName: 'build-dirs'
        condition: succeeded()
